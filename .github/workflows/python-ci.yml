name: dev ci

env:
  APP_PROJECT_NAME: virtual-assistant
  APP_CHART_NAME: debug-ci
  GITLAB_REGISTRY: registry.gitlab.com/target-digital-transformation/devops
  HELM_REPO_QA: https://chartmuseum.dev.meeraspace.com/


on:
  push:
    branches: [main,master]
  pull_request:
    branches: [main,master]

jobs:
  build_test_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker image name env
        run: |
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "GITLAB_IMAGE_NAME=${GITLAB_REGISTRY}/${APP_CHART_NAME}:${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Build docker image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Push image to gitlab registry
        # if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo ${{ secrets.GITLAB_CR_PAT }} | docker login registry.gitlab.com -u ${{ secrets.GITLAB_CR_USER }} -p ${{ secrets.GITLAB_REG_TOKEN }}
          docker tag $IMAGE_NAME $GITLAB_IMAGE_NAME
          docker push $GITLAB_IMAGE_NAME

      - name: Display the Docker Image Liste
        run: |
          docker images

      - name: Display the repository name
        # if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "$REPOSITORY_NAME , $ARGOCD_REPO_NAME"
        shell: bash

  job_deploy_to_dev:
    name: update the image to manifest repo
    runs-on: ubuntu-latest
    needs:
     - build_test_package
    steps:
      - name: Checkout manifest repo
        uses: actions/checkout@v2
        # if: ${{ github.ref == 'refs/heads/main' }}
        with:
          repository: tespkg/tes_manifests
          token: ${{ secrets.TES_MANIFEST_TOKEN }}

      - name: Run Kubernetes tools
        uses: mikefarah/yq@master
        # if: ${{ github.ref == 'refs/heads/main' }}
        with:
          # yq: 4.9.6
          cmd: |
            cd helm/${APP_PROJECT_NAME}/${APP_CHART_NAME}
            ls
            yq --version
            GITLAB_IMAGE_NAME=${GITLAB_REGISTRY}/${APP_CHART_NAME}
            echo "GITLAB_IMAGE_NAME is ${GITLAB_REGISTRY}/${APP_CHART_NAME}"
            yq e '.common*.image.repository' values.yaml
            repository="${GITLAB_IMAGE_NAME}" yq e '.common*.image.repository  |= env(repository)' -i values.yaml
            echo "====after run repository="${GITLAB_IMAGE_NAME}" yq e '.common*.image.repository  |= env(repository)' -i values.yaml====="
            yq e '.common*.image.repository' values.yaml
            GITLAB_IMAGE_TAG=`echo ${GITHUB_SHA::8}`
            echo "GITLAB_IMAGE_TAG is ${GITLAB_IMAGE_TAG}"
            yq e 'common*.image.tag' values.yaml
            tag="${GITLAB_IMAGE_TAG}" yq e '.common*.image.tag |= env(tag)' -i values.yaml
            echo "=====after run  tag="${GITLAB_IMAGE_TAG}" yq e '.common*.image.tag |= env(tag)' -i values.yaml==== "
            yq e '.common*.image.tag' values.yaml
            echo "hello world" >> test.txt
      - name: Commit to ArgoCD repo
        # if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git status
          git config user.name ${GITHUB_ACTOR}
          git config user.email ${GITHUB_ACTOR}@github.com
          git pull
          if [ -z "$(git status --porcelain)" ]; then
            echo "Working directory clean"
          else
            #
            echo " Something changed"
            git status
            git add .
            git commit -m "${GITHUB_JOB}_${GITHUB_SHA::8}_details:${CI_COMMIT_MESSAGE}"
            git push
          fi



  job_deploy_to_test:
      name: (modify values-test.yaml)update the image to manifest repo
      #runs-on: [self-hosted, linux]
      runs-on: ubuntu-latest
      if: contains(github.ref, 'refs/tags/')
      steps:
        - name: tag image then push to gitlab registry
          run: |
            echo ${{ secrets.GITLAB_CR_PAT }} | docker login registry.gitlab.com -u ${{ secrets.GITLAB_CR_USER }} --password-stdin
            docker pull ${GITLAB_REGISTRY}/${APP_CHART_NAME}:${GITHUB_SHA::8}
            IMAGE_TAG=`echo ${GITHUB_REF} | awk -F "/" '{print $3}'`
            docker tag ${GITLAB_REGISTRY}/${APP_CHART_NAME}:${GITHUB_SHA::8} ${GITLAB_REGISTRY}/${APP_CHART_NAME}:${IMAGE_TAG}
            docker push ${GITLAB_REGISTRY}/${APP_CHART_NAME}:${IMAGE_TAG}

        - name: Checkout manifest repo
          uses: actions/checkout@v2
          with:
            repository: tespkg/tes_manifests
            token: ${{ secrets.TES_MANIFEST_TOKEN }}

        - name: update image version via yq
          uses: stefanprodan/kube-tools@v1
          with:
            helmv3: 3.2.1
            #yq: 4.9.6
            command: |
              cd helm/${APP_PROJECT_NAME}
              if [ ! -d tmp ]; then mkdir tmp ; fi
              if [ -d "0-env-test/${APP_CHART_NAME}" ];then
                isValueTestExist=`ls "0-env-test/${APP_CHART_NAME}/" | grep values-test`
                if [ ! -z "${isValueTestExist}" ];
                then
                  cp -v ./0-env-test/${APP_CHART_NAME}/values-test*.yaml tmp/
                  rm -rf ./0-env-test/${APP_CHART_NAME}
                  cp -r ${APP_CHART_NAME} 0-env-test/
                  cp -v tmp/values-test*.yaml ./0-env-test/${APP_CHART_NAME}/ && rm -rf tmp
                fi
              else
                mkdir -p 0-env-test/${APP_CHART_NAME}
                cp -r ${APP_CHART_NAME} 0-env-test/
                file="0-env-test/${APP_CHART_NAME}/values-test.yaml"
                if [ ! -f  $file ];then
                  touch 0-env-test/${APP_CHART_NAME}/values-test.yaml
                fi
              fi
              env
              echo "Display the current folder content ...."
              ls
              cd 0-env-test
              IMAGE_TAG=`echo ${GITHUB_REF} | awk -F "/" '{print $3}'`
              if [[ ${IMAGE_TAG} == v* ]]; then IMAGE_TAG=`echo ${IMAGE_TAG:1}`; fi
              echo "replace appVersion and version "
              echo "Display the 0-env-test folder content ...."
              ls && cat ${APP_CHART_NAME}/Chart.yaml && cat ${APP_CHART_NAME}/values.yaml

              yq w -i ${APP_CHART_NAME}/Chart.yaml appVersion  --style=double ${IMAGE_TAG}
              yq w -i ${APP_CHART_NAME}/Chart.yaml version  --style=double ${IMAGE_TAG}
              yq w -i ${APP_CHART_NAME}/values.yaml "common*.image.tag" ${IMAGE_TAG}

              echo "------------------------------- Verify chart.yaml and values.yaml UTF-8 codding ------------------------------"
              cat ${APP_CHART_NAME}/Chart.yaml && cat ${APP_CHART_NAME}/values.yaml
              echo "------------------------------- Verify chart.yaml and values.yaml UTF-8 codding ------------------------------"

              helmv3 repo add meeraspace ${HELM_REPO_QA} --username=${{ secrets.HELM_REPO_USER }} --password=${{ secrets.HELM_REPO_PASSWORD }}
              helmv3 repo list
              helmv3 plugin install https://github.com/chartmuseum/helm-push
              helmv3 push ${APP_CHART_NAME} meeraspace

        - name:  git push to ArgoCD's manifest repo
          run: |
            git config user.name ${GITHUB_ACTOR}
            git config user.email ${GITHUB_ACTOR}@github.com
            git pull
            if [ -z "$(git status --porcelain)" ]; then
              echo "Working directory clean ...."
            else
              echo " Something changed : "
              git status
              git add .
              git commit -m "${GITHUB_JOB}_${GITHUB_SHA::8}_details:${CI_COMMIT_MESSAGE}"
              git push
            fi
